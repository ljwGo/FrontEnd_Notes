// useMemo 会从函数调用中创建/重新访问记忆化值，
// 只有在第二个参数中传入的依赖项发生变化时，才会重新运行该函数。
// 函数的类型是根据第一个参数中函数的返回值进行推断的，如果希望明确指定，
// 可以为该 Hook 提供一个类型参数以指定函数类型

const visibleTodos = useMemo(() => filterTodos(todos, tab), [todos, tab]);

// 使用 useMemo 的常见场景包括：
// 1. 避免在每次渲染时重新计算昂贵的函数。
// 2. 在组件树中传递数据，而不需要通过 props 传递。
// 3. 在函数组件中创建记忆化值，以提高性能。

// 使用 useMemo 时，需要注意以下几点：
// 1. 依赖项数组中的值发生变化时，useMemo 才会重新计算记忆化值。
// 2. 如果依赖项数组为空，则每次渲染时都会重新计算记忆化值。
// 3. 如果依赖项数组中的值没有发生变化，则不会重新计算记忆化值。
